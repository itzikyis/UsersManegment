{"version":3,"sources":["components/OtherDataComp.js","components/UserDataComp.js","utils/AppUtils.js","components/PostComp.js","components/PostsComp.js","components/TodoComp.js","components/TodosComp.js","components/UsersDataComp.js","components/NavbarComp.js","App.js","serviceWorker.js","reducers/appReducer.js","index.js"],"names":["OtherDataComp","props","getStreet","e","a","tempOtherData","state","otherData","street","target","value","setState","callbackUserData","getCity","city","getZipCode","zipCode","Card","style","width","margin","bg","Body","Text","className","type","this","onChange","Component","UserDataComp","hideOtherData","showOtherData","overOtherDate","updateUser","dispatch","payload","user","deleteUser","id","getName","items","data","users","Object","values","filter","x","name","getEmail","email","callback","callbackParent","showUserData","address","zipcode","datas","item","status","todos","userId","some","y","completed","styles","backColor","idClicked","otherDataChanged","border","Header","onClick","defaultValue","Button","variant","onMouseOver","connect","usersUrl","axios","get","PostComp","title","body","PostsComp","getTitle","tempPost","post","getBody","addPost","showHide","userPosts","posts","map","index","key","marginRight","handleModalShowHide","Modal","show","size","aria-labelledby","centered","closeButton","Title","Footer","TodoComp","setAsComlete","markComplete","button","TodosComp","tempTodo","todo","addTodo","userTodos","UsersDataComp","setToStore","setTodosToStore","setPostsToStore","getData","Utils","usersData","nameToSearch","toLowerCase","includes","toString","clickedInChild","Container","Row","Col","paddingRight","NavbarComp","searchName","tempUser","addUser","Navbar","Brand","href","Form","inline","FormControl","placeholder","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","appReducer","action","currentUsers2","forEach","element","push","index2","findIndex","currentUsers3","splice","currentTodos","index4","currentUsers5","ids","d","maxId","Math","max","currentTodos6","todoIds","currentPosts7","postIds","store","createStore","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.53f1e8e4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass OtherDataComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            otherData: {\r\n                street: this.props.street,\r\n                city: this.props.city,\r\n                zipCode: this.props.zipCode\r\n            }\r\n        }\r\n    }\r\n\r\n    getStreet = async (e) => {\r\n        var tempOtherData = { ...this.state.otherData }\r\n        tempOtherData.street = e.target.value;\r\n        await this.setState({ otherData: tempOtherData })\r\n        this.props.callbackUserData(this.state.otherData)\r\n    }\r\n\r\n    getCity = async (e) => {\r\n        var tempOtherData = { ...this.state.otherData }\r\n        tempOtherData.city = e.target.value;\r\n        await this.setState({ otherData: tempOtherData })\r\n        this.props.callbackUserData(this.state.otherData)\r\n    }\r\n\r\n    getZipCode = async (e) => {\r\n        var tempOtherData = { ...this.state.otherData }\r\n        tempOtherData.zipCode = e.target.value;\r\n        await this.setState({ otherData: tempOtherData })\r\n        this.props.callbackUserData(this.state.otherData)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{ width: '20rem', margin: '5px' }} bg='Secondary'>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <label className=\"input-label\">Street</label><br />\r\n                        <input type='text' className=\"input\" value={this.props.street} onChange={this.getStreet} />\r\n                        <br />\r\n                        <label className=\"input-label\">City</label><br />\r\n                        <input type='text' className=\"input\" value={this.props.city} onChange={this.getCity} />\r\n                        <br />\r\n                        <label className=\"input-label\">Zip Code</label><br />\r\n                        <input type='text' className=\"input\" value={this.props.zipCode} onChange={this.getZipCode} />\r\n                        <br />\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OtherDataComp;","import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../css/UserDataComp.css'\r\nimport { connect } from 'react-redux';\r\nimport OtherDataComp from './OtherDataComp'\r\n\r\nclass UserDataComp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showOtherData: false,\r\n            showUserData: false,\r\n            user: [],\r\n            street: '',\r\n            city: '',\r\n            zipCode: ''\r\n        }\r\n    }\r\n\r\n    hideOtherData = () => {\r\n        this.setState({ showOtherData: false });\r\n    }\r\n\r\n    overOtherDate = () => {\r\n        this.setState({ showOtherData: true });\r\n    }\r\n\r\n    updateUser = () => {\r\n        this.props.dispatch({\r\n            type: 'UPDATE',\r\n            payload: { ...this.state.user }\r\n        });\r\n    }\r\n\r\n    deleteUser = () => {\r\n        this.props.dispatch({\r\n            type: 'DELETE',\r\n            payload: this.props.id\r\n        });\r\n    }\r\n\r\n    getName = (e) => {\r\n\r\n        // 1. Make a shallow copy of the items\r\n        let items = this.props.data.users;\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let user = Object.values(items).filter(x => x.id == this.props.id);\r\n        // 3. Replace the property you're intested in\r\n        user[0].name = e.target.value;\r\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n        //items[1] = user;\r\n        // 5. Set the state to our new copy\r\n        this.setState({ user });\r\n    }\r\n\r\n    getEmail = (e) => {\r\n        // 1. Make a shallow copy of the items\r\n        let items = this.props.data.users;\r\n        // 2. Make a shallow copy of the item you want to mutate\r\n        let user = Object.values(items).filter(x => x.id == this.props.id);\r\n        // 3. Replace the property you're intested in\r\n        user[0].email = e.target.value;\r\n        // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n        //items[1] = user;\r\n        // 5. Set the state to our new copy\r\n        this.setState({ user });\r\n    }\r\n\r\n    callback = (e) => {\r\n        this.props.callbackParent(e);\r\n    }\r\n\r\n    async otherDataChanged(data) {\r\n        await this.setState({\r\n            street: data.street,\r\n            city: data.city,\r\n            zipCode: data.zipCode\r\n        })\r\n\r\n         // 1. Make a shallow copy of the items\r\n         let items = this.props.data.users;\r\n         // 2. Make a shallow copy of the item you want to mutate\r\n         let user = Object.values(items).filter(x => x.id == this.props.id);\r\n         // 3. Replace the property you're intested in\r\n         user[0].address.street = this.state.street;\r\n         user[0].address.city =this.state.city;\r\n         user[0].address.zipcode =this.state.zipCode;\r\n         // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n         //items[1] = user;\r\n         // 5. Set the state to our new copy\r\n         this.setState({ user });\r\n    }\r\n\r\n    render() {\r\n\r\n        const datas = this.props.data;\r\n        let item = [{ id: 0, name: \"\", email: \"\" }];\r\n        let status = { status: false }\r\n        if (datas != null) {\r\n            let users = datas.users;\r\n            item = Object.values(users).filter(x => x.id == this.props.id);\r\n        }\r\n        if (datas != null && datas.todos != null) {\r\n            status = Object.values(datas.todos).filter(x => x.userId == item[0].id).some(y => y.completed == false)\r\n        }\r\n        let styles = status ? 'danger' : 'success';\r\n        let backColor = (this.props.idClicked === item[0].id) ? 'secondary' : 'light';\r\n        let otherData;\r\n        if (this.state.showOtherData) {\r\n            //console.log(this.props);\r\n            otherData = <OtherDataComp callbackUserData={(data) => this.otherDataChanged(data)} city={item[0].address.city} street={item[0].address.street} zipCode={item[0].address.zipcode} />\r\n        }\r\n        return (\r\n            <Card style={{ width: '25rem', margin: '5px' }} bg={backColor} border={styles} >\r\n                <Card.Body>\r\n                    <Card.Header onClick={() => this.props.callbackParent(item[0].id)}>\r\n                        ID: {item[0].id}\r\n                    </Card.Header>\r\n                    <Card.Text>\r\n                        <label className=\"input-label\">Name</label><br />\r\n                        <input type='text' className=\"input\" defaultValue={item[0].name} onChange={this.getName} />\r\n                        <br />\r\n                        <label className=\"input-label\">Email</label><br />\r\n                        <input type='text' className=\"input\" value={item[0].email} onChange={this.getEmail} />\r\n                        <br />\r\n                    </Card.Text>\r\n                    <br />\r\n                    <Button className=\"button\" variant=\"primary\" onClick={this.hideOtherData} onMouseOver={this.overOtherDate}>Other Data</Button>\r\n                    <Button className=\"button\" variant=\"success\" onClick={this.updateUser}>Update</Button>\r\n                    <Button className=\"button\" variant=\"danger\" onClick={this.deleteUser}>Delete</Button>\r\n                    <br />\r\n                    {otherData}\r\n                    <br />\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserDataComp);","import axios from 'axios'\r\n\r\nconst usersUrl = 'https://jsonplaceholder.typicode.com/users';\r\nconst postsUrl = 'https://jsonplaceholder.typicode.com/posts';\r\nconst todosUrl = 'https://jsonplaceholder.typicode.com/todos';\r\n\r\nconst getAllUsersData = () => {\r\n    return axios.get(usersUrl)\r\n}\r\n\r\nconst getUserData = (id) => {\r\n    return axios.get(usersUrl + id)\r\n}\r\n\r\nconst updateUser = (id, obj) => {\r\n    return axios.put(usersUrl + id, obj)\r\n}\r\n\r\nconst addUser = (obj) => {\r\n    return axios.post(usersUrl, obj)\r\n}\r\n\r\nconst deleteUser = (id) => {\r\n    return axios.delete(usersUrl + id)\r\n}\r\n\r\nconst getAllUsersTodos = () => {\r\n    return axios.get(todosUrl)\r\n}\r\n\r\nconst getAllUsersPosts = () => {\r\n    return axios.get(postsUrl)\r\n}\r\n\r\n\r\n\r\nexport default { getAllUsersData, getUserData, updateUser, addUser, deleteUser, getAllUsersTodos, getAllUsersPosts }","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass PostComp extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{ width: '17rem', margin: '5px' }} bg='Secondary'>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <label className=\"input-label\">Title</label><br />\r\n                        <input type='text' className=\"input\" value={this.props.title} />\r\n                        <br />\r\n                        <label className=\"input-label\">Body</label><br />\r\n                        <input type='text' className=\"input\" value={this.props.body} />\r\n                        <br />\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostComp;","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport PostComp from './PostComp'\r\nimport { connect } from 'react-redux';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass PostsComp extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showHide: false,\r\n            post: {\r\n                userId: '',\r\n                title: '',\r\n                body: ''\r\n            }\r\n        }\r\n\r\n    }\r\n    handleModalShowHide() {\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    getTitle = async (e) => {\r\n        var tempPost = { ...this.state.post }\r\n        tempPost.userId = this.props.idClicked;\r\n        tempPost.title = e.target.value;\r\n        await this.setState({ post: tempPost })\r\n    }\r\n\r\n    getBody = async (e) => {\r\n        var tempPost = { ...this.state.post }\r\n        tempPost.userId = this.props.idClicked;\r\n        tempPost.body = e.target.value;\r\n        await this.setState({ post: tempPost })\r\n    }\r\n\r\n    addPost = () => {\r\n        this.props.dispatch({\r\n            type: 'ADD-POST',\r\n            payload: { ...this.state.post }\r\n        });\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n\r\n    render() {\r\n        const datas = this.props.data;\r\n        let userPosts = null;\r\n        let userPostsData = Object.values(datas.posts)\r\n        let userPostsByID = userPostsData.filter((item) => item.userId == this.props.idClicked);\r\n\r\n        userPosts = userPostsByID.map((item, index) => {\r\n            return <PostComp key={item.id} id={item.id} title={item.title} body={item.body} />\r\n        })\r\n        return (\r\n            <Card style={{ width: '20rem', margin: '5px' }} bg='Secondary'>\r\n                <Card.Body>\r\n                    <Card.Header style={{ \"background-color\": 'gray', width: 'auto' }}>\r\n                        Posts - User {this.props.idClicked}\r\n                        <Button className=\"button\" variant=\"warning\" style={{ marginRight: \"auto\" }} onClick={() => this.handleModalShowHide()}>Add</Button>\r\n                    </Card.Header>\r\n                    <Card.Text>\r\n                        {userPosts}\r\n                    </Card.Text>\r\n\r\n                    <Modal show={this.state.showHide} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={() => this.handleModalShowHide()}>\r\n                            <Modal.Title>Add New Post</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <label className=\"input-label\">Title</label><br />\r\n                            <input type='text' className=\"input\" onChange={this.getTitle} />\r\n                            <br />\r\n                            <label className=\"input-label\">Body</label><br />\r\n                            <input type='text' className=\"input\" onChange={this.getBody} />\r\n                            <br />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={() => this.handleModalShowHide()}>Cancel</Button>\r\n                            <Button variant=\"primary\" onClick={() => this.addPost()}>Add</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(PostsComp);","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass TodoComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.id,\r\n            title: this.props.title,\r\n            completed: this.props.completed\r\n        }\r\n    }\r\n    setAsComlete = () => {\r\n        this.props.dispatch({\r\n            type: 'COMPLETE',\r\n            payload: {\r\n                userId: this.props.userId,\r\n                id: this.state.id,\r\n                title: this.state.title,\r\n                completed: this.state.completed\r\n            }\r\n        });\r\n    }\r\n\r\n    markComplete = async () => {\r\n        await this.setState({ completed: true })\r\n        this.setAsComlete();\r\n    };\r\n\r\n    render() {\r\n        let button = null;\r\n        if (!this.props.completed) {\r\n            button = <Button className=\"button\" variant=\"warning\" onClick={this.markComplete}>Mark Completed</Button>\r\n        }\r\n\r\n        return (\r\n            <Card style={{ width: '17rem', margin: '5px' }} bg='Secondary'>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <label className=\"input-label\">Title</label><br />\r\n                        <input type='text' className=\"input\" value={this.state.title} />\r\n                        <br />\r\n                        <label className=\"input-label\">Completed</label><br />\r\n                        <input type='text' className=\"input\" value={this.state.completed} />\r\n                        <br />\r\n                        {button}\r\n                        <br />\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TodoComp);","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport TodoComp from './TodoComp'\r\nimport { connect } from 'react-redux';\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nclass TodosComp extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showHide: false,\r\n            todo: {\r\n                userId: '',\r\n                title: '',\r\n                completed: false\r\n            }\r\n        }\r\n    }\r\n\r\n    handleModalShowHide() {\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    getTitle = async (e) => {\r\n        var tempTodo = { ...this.state.todo }\r\n        tempTodo.userId = this.props.idClicked;\r\n        tempTodo.title = e.target.value;\r\n        await this.setState({ todo: tempTodo })\r\n    }\r\n\r\n    addTodo = () => {\r\n        this.props.dispatch({\r\n            type: 'ADD-TODO',\r\n            payload: { ...this.state.todo }\r\n        });\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    render() {\r\n        const datas = this.props.data;\r\n        let userTodos = null;\r\n        let userTodosData = Object.values(datas.todos)\r\n        let userTodosByID = userTodosData.filter((item) => item.userId == this.props.idClicked);\r\n\r\n        userTodos = userTodosByID.map((item, index) => {\r\n            return <TodoComp key={item.id} id={item.id} title={item.title} completed={item.completed} userId={item.userId} />\r\n        })\r\n\r\n        return (\r\n            <Card style={{ width: '20rem', margin: '5px' }} bg='Secondary'>\r\n                <Card.Body>\r\n                    <Card.Header style={{ \"background-color\": 'gray', width: 'auto' }}>\r\n                        Todos - User {this.props.idClicked}\r\n                        <Button className=\"button\" variant=\"warning\" style={{ marginRight: \"auto\" }} onClick={() => this.handleModalShowHide()}>Add</Button>\r\n                    </Card.Header>\r\n                    <Card.Text>\r\n                        {userTodos}\r\n                    </Card.Text>\r\n\r\n                    <Modal show={this.state.showHide} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                        <Modal.Header closeButton onClick={() => this.handleModalShowHide()}>\r\n                            <Modal.Title>Add New Todo</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <label className=\"input-label\">Title</label><br />\r\n                            <input type='text' className=\"input\" onChange={this.getTitle} />\r\n                            <br />\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={() => this.handleModalShowHide()}>Cancel</Button>\r\n                            <Button variant=\"primary\" onClick={() => this.addTodo()}>Add</Button>\r\n                        </Modal.Footer>\r\n                    </Modal>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(TodosComp);","import React, { Component } from 'react'\r\nimport UserDataComp from './UserDataComp'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Utils from '../utils/AppUtils';\r\nimport { connect } from 'react-redux';\r\nimport PostsComp from './PostsComp'\r\nimport TodosComp from './TodosComp'\r\n\r\nclass UsersDataComp extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            todos: [],\r\n            posts: [],\r\n            idClicked: ''\r\n        }\r\n    }\r\n    setToStore = () => {\r\n        this.props.dispatch({\r\n            type: 'ADD',\r\n            payload: { ...this.state.users }\r\n        });\r\n    }\r\n\r\n    setTodosToStore = () => {\r\n        this.props.dispatch({\r\n            type: 'ADD-TODOS',\r\n            payload: { ...this.state.todos }\r\n        });\r\n    }\r\n\r\n    setPostsToStore = () => {\r\n        this.props.dispatch({\r\n            type: 'ADD-POSTS',\r\n            payload: { ...this.state.posts }\r\n        });\r\n    }\r\n\r\n    getData = async () => {\r\n        const usersData = await Utils.getAllUsersData();\r\n        await this.setState({ users: usersData.data })\r\n\r\n        this.setToStore();\r\n\r\n        const todos = await Utils.getAllUsersTodos();\r\n        await this.setState({ todos: todos.data })\r\n\r\n        this.setTodosToStore();\r\n\r\n        const posts = await Utils.getAllUsersPosts();\r\n        await this.setState({ posts: posts.data })\r\n\r\n        this.setPostsToStore();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    async clickedInChild(id) {\r\n        await this.setState({ idClicked: id })\r\n    }\r\n\r\n    render() {\r\n        const datas = this.props.data;\r\n        let users = null;\r\n        let userTodos = null;\r\n        let userPosts = null;\r\n        if (datas != null) {\r\n            let usersData = Object.values(datas.users)\r\n            users = usersData.map((item, index) => {\r\n                if (datas == null || datas.nameToSearch == null || datas.nameToSearch === \"\" || (\r\n                    datas.nameToSearch !== \"\" &&\r\n                    (item.name.toLowerCase().includes(datas.nameToSearch.toString().toLowerCase()) ||\r\n                        item.email.toLowerCase().includes(datas.nameToSearch.toString().toLowerCase())))) {\r\n                    return <UserDataComp callbackParent={(data) => this.clickedInChild(data)} key={item.id} id={item.id} idClicked={this.state.idClicked} />\r\n                }\r\n            })\r\n            if (this.state.idClicked !== \"\") {\r\n                userTodos = <TodosComp idClicked={this.state.idClicked} />\r\n                userPosts = <PostsComp idClicked={this.state.idClicked} />\r\n            }\r\n        }\r\n\r\n\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <Col style={{ paddingRight: 0 }}>{users}</Col>\r\n                    <Col style={{ paddingRight: 0 }}>{userTodos}</Col>\r\n                    <Col style={{ paddingRight: 0 }}>{userPosts}</Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UsersDataComp);","import React, { Component } from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { connect } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nclass NavbarComp extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            nameToSearch: '',\r\n            showHide: false,\r\n            user: {\r\n                name: '',\r\n                email: '',\r\n                address: {\r\n                    city: '',\r\n                    street: '',\r\n                    zipcode: ''\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setToStore = (e) => {\r\n        this.props.dispatch({\r\n            type: 'ADD-SEARCH',\r\n            payload: { nameToSearch: e.target.value }\r\n        });\r\n    }\r\n\r\n    searchName = (e) => {\r\n        this.setState({ nameToSearch: e.target.value });\r\n        this.setToStore(e);\r\n    }\r\n\r\n    handleModalShowHide() {\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    getName = async (e) => {\r\n        var tempUser = { ...this.state.user }\r\n        tempUser.name = e.target.value;\r\n        await this.setState({ user: tempUser })\r\n    }\r\n\r\n    getEmail = async (e) => {\r\n        var tempUser = { ...this.state.user }\r\n        tempUser.email = e.target.value;\r\n        await this.setState({ user: tempUser })\r\n    }\r\n    addUser = () => {\r\n        this.props.dispatch({\r\n            type: 'ADD-USER',\r\n            payload: { ...this.state.user }\r\n        });\r\n        this.setState({ showHide: !this.state.showHide })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">USER MANEGMENT</Navbar.Brand>\r\n                <Form inline>\r\n                    <FormControl type=\"text\" defaultValue=\"\" onChange={this.searchName} placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                    <Button variant=\"outline-success\" onClick={() => this.handleModalShowHide()}>Add User</Button>\r\n                </Form>\r\n\r\n                <Modal show={this.state.showHide} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\r\n                    <Modal.Header closeButton onClick={() => this.handleModalShowHide()}>\r\n                        <Modal.Title>Add New User</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <label className=\"input-label\">Name</label><br />\r\n                        <input type='text' className=\"input\" onChange={this.getName} />\r\n                        <br />\r\n                        <label className=\"input-label\">Email</label><br />\r\n                        <input type='text' className=\"input\" onChange={this.getEmail} />\r\n                        <br />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.handleModalShowHide()}>Cancel</Button>\r\n                        <Button variant=\"primary\" onClick={() => this.addUser()}>Add</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(NavbarComp);","import React from 'react';\nimport './App.css';\nimport UsersDataComp from './components/UsersDataComp'\nimport NavbarComp from './components/NavbarComp'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavbarComp />\n      <UsersDataComp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD':\r\n      return { ...state, users: action.payload };\r\n\r\n    case 'ADD-TODOS':\r\n      return { ...state, todos: action.payload };\r\n\r\n    case 'ADD-POSTS':\r\n      return { ...state, posts: action.payload };\r\n\r\n    case 'ADD-SEARCH':\r\n      return { ...state, nameToSearch: action.payload.nameToSearch };\r\n\r\n    case 'UPDATE':\r\n      let currentUsers2 = [];\r\n      let items2 = Object.values(state.users)\r\n      items2.forEach(element => {\r\n        currentUsers2.push(element);\r\n      });\r\n\r\n      let index2 = currentUsers2.findIndex(x => x.id == action.payload.id);\r\n      if (index2 > -1) {\r\n        currentUsers2[index2] = action.payload;\r\n      }\r\n      return { ...state, users: currentUsers2 };\r\n\r\n    case 'DELETE':\r\n      let currentUsers3 = [];\r\n      let items = Object.values(state.users)\r\n      items.forEach(element => {\r\n        currentUsers3.push(element);\r\n      });\r\n\r\n      let index = currentUsers3.findIndex(x => x.id == action.payload);\r\n      if (index > -1) {\r\n        currentUsers3.splice(index, 1);\r\n      }\r\n\r\n      return { ...state, users: currentUsers3 };\r\n\r\n    case 'COMPLETE':\r\n      let currentTodos = [];\r\n      let items4 = Object.values(state.todos)\r\n      items4.forEach(element => {\r\n        currentTodos.push(element);\r\n      });\r\n\r\n      let index4 = currentTodos.findIndex(x => x.id == action.payload.id);\r\n      if (index4 > -1) {\r\n        currentTodos[index4] = action.payload;\r\n      }\r\n      return { ...state, todos: currentTodos };\r\n\r\n\r\n    case 'ADD-USER':\r\n      let currentUsers5 = [];\r\n      let items5 = Object.values(state.users)\r\n      items5.forEach(element => {\r\n        currentUsers5.push(element);\r\n      });\r\n\r\n      var ids = currentUsers5.map(d => d.id);\r\n      var maxId = Math.max(...ids);\r\n      var user = {\r\n        id: maxId + 1,\r\n        name: action.payload.name,\r\n        email: action.payload.email,\r\n        address: {\r\n          city: '',\r\n          street: '',\r\n          zipcode: ''\r\n        }\r\n      }\r\n      currentUsers5.push(user);\r\n\r\n      return { ...state, users: currentUsers5 };\r\n\r\n      case 'ADD-TODO':\r\n        let currentTodos6 = [];\r\n        let items6 = Object.values(state.todos)\r\n        items6.forEach(element => {\r\n          currentTodos6.push(element);\r\n        });\r\n  \r\n        var todoIds = currentTodos6.map(d => d.id);\r\n        var maxId = Math.max(...todoIds);\r\n\r\n        var todo= {\r\n          userId: action.payload.userId,\r\n          id: maxId + 1,\r\n          title: action.payload.title,\r\n          completed: false\r\n      }\r\n      currentTodos6.push(todo);\r\n  \r\n        return { ...state, todos: currentTodos6 };\r\n\r\n        case 'ADD-POST':\r\n          let currentPosts7 = [];\r\n          let items7 = Object.values(state.posts)\r\n          items7.forEach(element => {\r\n            currentPosts7.push(element);\r\n          });\r\n    \r\n          var postIds = currentPosts7.map(d => d.id);\r\n          var maxId = Math.max(...postIds);\r\n  \r\n          var post= {\r\n            userId: action.payload.userId,\r\n            id: maxId + 1,\r\n            title: action.payload.title,\r\n            body: action.payload.body\r\n        }\r\n        currentPosts7.push(post);\r\n    \r\n          return { ...state, posts: currentPosts7 };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport appReducer from './reducers/appReducer'\n\nconst store = createStore(appReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}